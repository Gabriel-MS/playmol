/*! @page commands Commands

Playmol is designed to execute text-file scripts containing the commands described below:

@secreflist
@refitem atom_type_sec atom_type
@refitem bond_type_sec bond_type
@refitem angle_type_sec angle_type
@refitem dihedral_type_sec dihedral_type
@refitem improper_type_sec improper_type
@refitem mass_sec mass
@refitem atom_sec atom
@refitem bond_sec bond
@refitem improper_sec improper
@refitem xyz_sec xyz
@refitem box_sec box
@refitem prefix_sec prefix
@refitem include_sec include
@refitem write_sec write
@endsecreflist

<hr>

@section atom_type_sec atom_type

@addindex atom_type

@b Syntax:

@verbatim
atom_type	id attribute-list
@endverbatim

@li @a id = a name assigned to the atom type being defined
@li @a attribute-list = a list of attributes related to the atom type being defined

@b Examples:

@verbatim
atom_type	CH3 0.1947 3.75
atom_type	CH2 lj/cut 0.0914 3.95
@endverbatim

@b Description:

This command defines an atom type and its related attributes. One or more atom types must necessarily be defined before any @ref atom_sec "atom" is created and
before any @ref bond_type_sec "bond type", @ref angle_type_sec "angle type", @ref dihedral_type_sec "dihedral type", or @ref improper_type_sec "improper type" is
defined.

The parameter @a id must be a single string with no comment tags (#) and no wildcard characters (* or ?). If a type @ref prefix_sec "prefix" has been previously
activated, then the actual atom type identifier will contain such prefix, followed by the specified @a id. Two atom types cannot have the same identifier.

The parameter @attribute-list can be a sequence of strings containing any characters except comment tags (#). When a LAMMPS data file is generated using the
command @ref write_sec "write", then @attribute-list is assumed to contain the parameters of the LAMMPS pair style associated with the atom type in question.

@sa @ref atom_sec, @ref bond_type_sec, @ref angle_type_sec, @ref dihedral_type_sec, @ref improper_type_sec, @ref prefix_sec

<hr>

@section bond_type_sec bond_type

@addindex bond_type

@b Syntax:

@verbatim
bond_type	type-1 type-2 attribute-list
@endverbatim

@li @a type-x = identifier of a previously defined atom type
@li @a attribute-list = list of attributes related to the bond type being defined

@b Examples:

@verbatim
bond_type	CH3 CH2 95.877 1.54
bond_type	CH2 CH? 95.877 1.54
bond_type	C* C* 95.877 1.54
@endverbatim

@b Description:

This command defines a bond type and its related attributes. One or more bond types must necessarily be defined before any chemical @ref bond_sec "bond"
is created. A bond type is identified by the types of the two atoms involved.

The parameters @a type-1 and @a type-2 are identifiers of previously defined atom types. Wildcard characters (? and *) can be used to refer to multiple
atom types. Two bond types cannot refer to the same pair of atom types, regardless of the order of @a type-1 and @a type-2. If a type @ref prefix_sec
"prefix" has been previously activated, then the actual identifiers of both atom types will contain such prefix, followed by the specified parameters
@a type-1 and @a type-2.

The parameter @attribute-list can be a sequence of strings containing any characters except comment tags (#). When a LAMMPS data file is generated using the
command @ref write_sec "write", then @attribute-list is assumed to contain the parameters of the LAMMPS bond style associated with the bond type in question.

@sa @ref atom_type_sec, @ref bond_sec, @ref write_sec

<hr>

@section angle_type_sec angle_type

@addindex angle_type

@b Syntax:

@verbatim
angle_type	atom-type-1 atom-type-2 atom-type-3 attribute-list
@endverbatim

@li @a atom-type-x = name of a previously defined atom type @n
@li @a attribute-list = list of attributes related to the defined angle type

@b Examples:

@verbatim
angle_type	CH3 CH2 CH2 62.0965 114
angle_type	CH2 CH2 CH2 62.0965 114
@endverbatim

@b Description:

This command defines....

@sa @ref atom_type_sec

<hr>

@section dihedral_type_sec dihedral_type

@addindex dihedral_type

@b Syntax:

@verbatim
dihedral_type	atom-type-1 atom-type-2 atom-type-3 atom-type-4 attribute-list
@endverbatim

@li @a atom-type-x = name of a previously defined atom type @n
@li @a attribute-list = list of attributes related to the defined dihedral type

@b Examples:

@verbatim
dihedral_type	CH3 CH2 CH2 CH2 1.41095 -0.27100 3.14484 0
dihedral_type	CH2 CH2 CH2 CH2 1.41095 -0.27100 3.14484 0
@endverbatim

@b Description:

This command defines....

@sa @ref atom_type_sec

<hr>

@section improper_type_sec improper_type

@addindex improper_type

@b Syntax:

@verbatim
improper_type	atom-type atom-type atom-type atom-type attribute-list
@endverbatim

@li @a atom-type-x = name of a previously defined atom type @n
@li @a attribute-list = list of attributes related to the defined improper type

@b Examples:

@verbatim
improper_type	CH3 CH2 CH2 CH2 1.41095 -0.27100 3.14484 0
improper_type	CH2 CH2 CH2 CH2 1.41095 -0.27100 3.14484 0
@endverbatim

@b Description:

This command defines....

@sa @ref atom_type_sec, @ref improper_sec

<hr>

@section mass_sec mass

@addindex mass

@b Syntax:

@verbatim
mass		atom-type mass-value
@endverbatim

@li @a atom-type = name of a previously defined atom type @n
@li @a mass-value = mass of atoms of the specified atom type

@b Examples:

@verbatim
mass		CH2 14.0
@endverbatim

@b Description:

This command defines.....

@sa @ref atom_type_sec

<hr>

@section atom_sec atom

@addindex atom

@b Syntax:

@verbatim
atom		name atom-type
@endverbatim

@li @a name = name of the atom being defined @n
@li @a atom-type = name of a previously defined atom type

@b Examples:

@verbatim
atom		C1 CH3
atom		C2 CH2
@endverbatim

@b Description:

This command defines.....

Both parameters @a name and @a atom-type must not contain wildcard characters.

Everytime a new atom is created, a new molecule is also defined which contains such atom. Afterwards,
if the new atom is bonded to another existing atom via the @ref bond_sec command, the two corresponding
molecules will be fused together.

@sa @ref atom_type_sec, @ref bond_sec

<hr>

@section bond_sec bond

@addindex bond

@b Syntax:

@verbatim
bond		atom-1 atom-2
@endverbatim

@li @a atom-x = name of a previously defined atom

@b Examples:

@verbatim
bond		C1 C2
@endverbatim

@b Description:

This command defines....

@sa @ref bond_type_sec, @ref atom_type_sec

<hr>

@section improper_sec improper

@addindex improper

@b Syntax:

@verbatim
improper	atom-1 atom-2 atom-3 atom-4
@endverbatim

@li @a atom-x = name of a previously defined atom

@b Examples:

@verbatim
improper	C1 C2 C3 C4
@endverbatim

@b Description:

This command defines....

@sa @ref @ref atom_sec

<hr>

@section xyz_sec xyz

@addindex xyz

@b Syntax:

@verbatim
xyz		[file-name]
@endverbatim

@li @a file-name (optional) = name of a file containing atom coordinates

@b Examples:

@verbatim
xyz		H2O.xyz

xyz
3
# Water molecule:
H1		-0.239 0.928 0.000
O		 0.000 0.000 0.000
H2		 0.958 0.000 0.000
@endverbatim

@b Description:

This command.....

@sa @ref atom_sec, @ref box_sec

<hr>

@section box_sec box

@addindex box

@b Syntax:

@verbatim
box		x-min x-max y-min y-max z-min z-max
@endverbatim

@li @a x-min x-max = simulation box limits in the x-direction @n
@li @a y-min y-max = simulation box limits in the y-direction @n
@li @a z-min z-max = simulation box limits in the z-direction

@b Example:

@verbatim
box		0.0 30.0 0.0 30.0 0.0 30.0
@endverbatim

@b Description:

This command.....

@sa @ref xyz_sec

<hr>

@section prefix_sec prefix

@addindex prefix

@b Syntax:

@verbatim
prefix		prefix-style text
@endverbatim

@li @a prefix-style = @a type or @a atom @n
@li @a text = 

@b Examples:

@verbatim
prefix		type A
prefix		atom H2O_
@endverbatim

@b Description:

This command...

@sa @ref atom_type_sec, @ref atom_sec

<hr>

@section include_sec include

@addindex include

@b Syntax:

@verbatim
include		file-name
@endverbatim

@li @a file-name = name of a file containing other playmol commands

@b Examples:

@verbatim
include		H2O.pmol
@endverbatim

@b Description:

This command.....

@sa @ref atom_type_sec, @ref atom_sec

<hr>

@section write_sec write

@addindex write

@b Syntax:

@verbatim
write		write-style file-name
@endverbatim

@li @a write-style = @a playmol or @a lammps @n
@li @a file-name = name of the file to be created

@b Examples:

@verbatim
write		playmol water.pmol
write		lammps water.lammps_data
@endverbatim

@b Description:

This command writes down the molecular system into a file.

<hr>

*/

